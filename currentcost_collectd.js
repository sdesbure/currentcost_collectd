// Generated by CoffeeScript 1.7.1
(function() {
  var Collectd, CurrentCost, client, config, currentcost, probe, sensors, start, values, _ref;

  require('require-yaml');

  CurrentCost = require('currentcost');

  Collectd = require('collectdout');

  config = require('./config.yml');

  currentcost = new CurrentCost.CurrentCost(config.currentcost.usb);

  client = new Collectd(config.collectd.interval, config.collectd.host, config.collectd.port);

  sensors = {};

  _ref = config.probes;
  for (probe in _ref) {
    values = _ref[probe];
    sensors[probe] = {
      name: values.name,
      temperature: 0.0,
      power: 0.0,
      plugin: client.plugin('current_cost', values.name)
    };
  }

  currentcost.on('incremental', function(data) {
    sensors[data.sensor].temperature = data.tmpr;
    return sensors[data.sensor].power = data.ch1.watts;
  });

  currentcost.on('history', function(data) {});

  start = currentcost.begin();

  currentcost.on('error', function(data) {
    console.log('Error!');
    return console.log(data);
  });

  setInterval(function() {
    var sensor_id, _results;
    _results = [];
    for (sensor_id in sensors) {
      values = sensors[sensor_id];
      values.plugin.setGauge('temperature', 'temperature', values.temperature);
      values.plugin.setGauge('power', 'power', values.power);
      _results.push(console.log("sent temperature %d, power %d for probe %s", values.temperature, values.power, sensor_id));
    }
    return _results;
  }, config.collectd.interval);

}).call(this);
